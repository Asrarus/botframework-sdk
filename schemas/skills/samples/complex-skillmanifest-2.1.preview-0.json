{
  "$schema": "https://raw.githubusercontent.com/microsoft/botframework-sdk/master/schemas/skill-manifest-2.1.preview-0",
  "$id": "SkillBot",
  "name": "Demo skill bot with dialogs",
  "version": "1.0",
  "description": "This is a demo ",
  "publisherName": "Microsoft",
  "privacyUrl": "https://myskill.com/privacy.html",
  "copyright": "Copyright (c) Microsoft Corporation. All rights reserved.",
  "license": "",
  "iconUrl": "https://myskill.com/icon.png",
  "tags": [
    "sample",
    "authentication",
    "travel"
  ],
  "endpoints": [
    {
      "name": "Americas",
      "protocol": "BotFrameworkV3",
      "description": "Production  endpoint for SkillBot.",
      "endpointUrl": "http://contoso.com/api/messages",
      "msAppId": "00000000-0000-0000-0000-000000000000"
    },
    {
      "name": "Europe",
      "protocol": "BotFrameworkV3",
      "description": "Staging endpoint for SkillBot.",
      "endpointUrl": "http://staging.contoso.com/api/messages",
      "msAppId": "11111111-1111-1111-1111-111111111111"
    }
  ],
  "language": {
    "models": {
      "en": "http://sample.com/SkillBot-en.lu",
      "es": "http://sample.com/SkillBot-es.lu"
    },
    "intents": {
      "help": "#/activities/message",
      "getWeather": "#/activities/messageWithLocale",
      "bookAFlight": "#/activities/messageWithUserProfile"
    }
  },
  "activities": {
    "message": {
      "type": "message"
    },
    "messageWithLocale": {
      "type": "message",
      "value": {
        "$ref": "#/definitions/localeValue"
      }
    },
    "messageWithUserProfile": {
      "type": "message",
      "value": {
        "$ref": "#/definitions/userProfile"
      }
    },
    "bookFlightEvent": {
      "description": "Defines how to send an 'BookFlight' Event Activity to the skill.",
      "type": "event",
      "name": "BookFlight",
      "value": {
        "$ref": "#/definitions/bookingInfo"
      },
      "resultValue": {
        "$ref": "#/definitions/bookingInfo"
      }
    },
    "getWeather": {
      "description": "Defines how to send an 'GetWeather' Invoke Activity to the skill.",
      "type": "invoke",
      "name": "GetWeather",
      "value": {
        "$ref": "#/definitions/location"
      },
      "resultValue": {
        "$ref": "#/definitions/weatherReport"
      }
    }
  },
  "sendActivities": {
    "FlightUpdatedEvent": {
      "type": "event",
      "name": "FlightUpdated",
      "value": {
        "$ref": "#/definitions/flightUpdatePayload"
      }
    }
  },
  "definitions": {
    "localeValue": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "description": "The current user's locale ISO code"
        }
      }
    },
    "bookingInfo": {
      "type": "object",
      "required": [
        "origin"
      ],
      "properties": {
        "origin": {
          "type": "string",
          "description": "this is the origin city for the flight"
        },
        "destination": {
          "type": "string",
          "description": "this is the destination city for the flight"
        },
        "date": {
          "type": "string",
          "description": "The date for the flight in YYYY-MM-DD format"
        }
      }
    },
    "flightUpdatePayload": {
      "type": "object",
      "description": "Event which is sent by the skill when there is an update in flight info",
      "properties": {
        "flightNumber": {
          "type": "string"
        },
        "departureDate": {
          "type": "string"
        },
        "departureTime": {
          "type": "string"
        }
      }
    },
    "weatherReport": {
      "type": "array",
      "description": "Array of forecasts for the next week.",
      "items": [
        {
          "type": "string"
        }
      ]
    },
    "userProfile": {
      "type": "object",
      "description": "User Profile properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "The current user's name  (OPTIONAL)"
        },
        "zip": {
          "type": "string",
          "description": "The current user's zip code (OPTIONAL)"
        }
      }
    },
    "location": {
      "type": "object",
      "description": "Location metadata",
      "properties": {
        "latitude": {
          "type": "number",
          "title": "Latitude"
        },
        "longitude": {
          "type": "number",
          "title": "Longitute"
        },
        "postalCode": {
          "type": "string",
          "title": "Postal code"
        }
      }
    }
  }
}